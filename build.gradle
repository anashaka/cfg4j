/*
 * Copyright 2015-2016 Norbert Potocki (norbert.potocki@nort.pl)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ----------- Build script configuration -----------

buildscript {

    ext {
        artifactGroup = "com.mm.cfg4j"
        artifactVersion = "5.0.10"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: "com.github.ben-manes", name: "gradle-versions-plugin", version: "0.12.0"
    }
}

// Generate Gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = "2.14.1"
}

subprojects {

    // ----------- Plugins -----------
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "jacoco"
    apply plugin: "maven"
    apply plugin: "signing"
    apply plugin: "com.github.ben-manes.versions"

    // ----------- Repositories -----------
    repositories {
        mavenLocal()
        mavenCentral()
    }

    // ----------- External module dependencies -----------
    dependencies {

        // Logging
        compile group: "org.slf4j", name: "slf4j-api", version: "1.7.21"

        // YAML
        compile group: "org.yaml", name: "snakeyaml", version: '1.17'

        // Metrics
        compile group: "io.dropwizard.metrics", name: "metrics-core", version: "3.1.2"

        testCompile group: "junit", name: "junit", version: "4.12"
        testCompile group: "org.assertj", name: "assertj-core", version: "2.5.0"
        testCompile group: "org.mockito", name: "mockito-core", version: "1.10.19"
        testCompile group: "org.powermock", name: "powermock-api-mockito", version: "1.6.5"
        testCompile group: "org.powermock", name: "powermock-module-junit4", version: "1.6.5"
    }

    // ----------- EXTRA tasks -----------
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

// ----------- Task configurations -----------
    defaultTasks "clean", "build"

    compileJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            html.enabled false
        }
    }

    group = "${artifactGroup}"
    version = "${artifactVersion}"

    artifacts {
        archives javadocJar, sourcesJar
    }

    apply plugin: 'maven-publish'

    publishing {
        repositories {
            maven {
                url "${nexusRepo}/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
                credentials {
                    username "${nexusUsername}"
                    password "${nexusPassword}"
                }
            }
        }
        publications {
            mavenCustom(MavenPublication) {
                artifact sourcesJar
                pom.withXml {
                    def root = asNode()
                    def dependencies = new Node(root, "dependencies")
                    project.configurations.runtime.resolvedConfiguration.resolvedArtifacts.each { dep ->
                        ModuleVersionIdentifier mvi = dep.moduleVersion.id
                        def dependency = new Node(dependencies, "dependency")
                        dependency.appendNode('groupId', mvi.group)
                        dependency.appendNode('artifactId', mvi.name)
                        dependency.appendNode('version', mvi.version)
                        dependency.appendNode('scope', 'runtime')
                        def exclusions = dependency.appendNode('exclusions')
                        def exclusion = exclusions.appendNode('exclusion')
                        exclusion.appendNode('groupId', '*')
                        exclusion.appendNode('artifactId', '*')
                    }
                }
                artifact jar
            }
        }
    }}